/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/v1/races": {
    /** @description レース一覧を取得する. */
    get: {
      /** @description レース一覧を取得する. */
      parameters: {
          /** @description レース一覧を取得する日付 */
        query: {
          date: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": (components["schemas"]["Race"])[];
          };
        };
      };
    };
  };
  "/v1/races/{raceid}/detail": {
    /** @description レース詳細を取得する. */
    get: {
      /** @description レース詳細を取得する. */
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["RaceDetail"];
          };
        };
        /** @description {raceid} not found. */
        404: never;
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Race: {
      /** @example 2019122210611 */
      id: string;
      /**
       * Format: date 
       * @example 2019-12-22
       */
      date: string;
      /** @example 106 */
      courseid: string;
      /** @example 中山 */
      coursename: string;
      /**
       * Format: int32 
       * @example 11
       */
      racenumber: number;
      /** @example 有馬記念 */
      racename: string;
    };
    RaceDetail: {
      raceinfo?: components["schemas"]["Race"];
      horses?: (components["schemas"]["HorseInRace"])[];
    };
    HorseInRace: {
      /** @example 3 */
      bracketnumber?: number;
      /** @example 6 */
      horsenumber?: number;
      /** @example 1191589 */
      horseid?: string;
      /** @example リスグラシュー */
      horsename: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export type operations = Record<string, never>;
